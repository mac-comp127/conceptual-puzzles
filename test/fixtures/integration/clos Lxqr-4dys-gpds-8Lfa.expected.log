Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
[0Jâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;221m            [0m
[1m[38;5;16m[48;5;221m   PART 1   [0m
[1m[38;5;16m[48;5;221m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    afterDelay(2, () -> {
        [100m[97m  B  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  C  [39m[49m
            twice(() -> [100m[97m  D  [39m[49m);
            [100m[97m  E  [39m[49m
        });
        [100m[97m  F  [39m[49m
        onKeyPress(() -> {
            [100m[97m  G  [39m[49m
            twice(() -> [100m[97m  H  [39m[49m);
            [100m[97m  I  [39m[49m
        });
        [100m[97m  J  [39m[49m
    });
    [100m[97m  K  [39m[49m
    onKeyPress(() -> [100m[97m  L  [39m[49m);
    [100m[97m  M  [39m[49m
    onClick(() -> {
        [100m[97m  N  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  O  [39m[49m
            onClick(() -> [100m[97m  P  [39m[49m);
            [100m[97m  Q  [39m[49m
        });
        [100m[97m  R  [39m[49m
        twice(() -> {
            [100m[97m  S  [39m[49m
            onKeyPress(() -> [100m[97m  T  [39m[49m);
            [100m[97m  U  [39m[49m
        });
        [100m[97m  V  [39m[49m
    });
    [100m[97m  W  [39m[49m
    onKeyPress(() -> [100m[97m  X  [39m[49m);
    [100m[97m  Y  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    TICK
    TICK
    KEY
    TICK
    KEY
    TICK
    KEY
    TICK
    KEY
    CLICK

[1m[38;5;222m[48;5;52m              [0m
[1m[38;5;222m[48;5;52m   SOLUTION   [0m
[1m[38;5;222m[48;5;52m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  Y  [39m[49m

    TICK

    TICK
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m

    KEY
    [100m[97m  L  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m

    TICK
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m

    KEY
    [100m[97m  L  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m

    TICK

    KEY
    [100m[97m  L  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m

    TICK

    KEY
    [100m[97m  L  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m

    CLICK
    [100m[97m  N  [39m[49m
    [100m[97m  R  [39m[49m
    [100m[97m  S  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  S  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;87m            [0m
[1m[38;5;16m[48;5;87m   PART 2   [0m
[1m[38;5;16m[48;5;87m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            onClick(() -> {
                if (x < 1) {
                    System.out.println("Hi!");
                }
            });

            if (x < 1) {
                onClick(() -> {
                    System.out.println("Bye!");
                });
            }

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    End of run()
    x=1
    Bye!
    x=2
    Bye!

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;206m            [0m
[1m[38;5;16m[48;5;206m   PART 1   [0m
[1m[38;5;16m[48;5;206m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    onKeyPress(() -> {
        [100m[97m  B  [39m[49m
        onKeyPress(() -> {
            [100m[97m  C  [39m[49m
            twice(() -> [100m[97m  D  [39m[49m);
            [100m[97m  E  [39m[49m
        });
        [100m[97m  F  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  G  [39m[49m
            onKeyPress(() -> [100m[97m  H  [39m[49m);
            [100m[97m  I  [39m[49m
        });
        [100m[97m  J  [39m[49m
    });
    [100m[97m  K  [39m[49m
    onClick(() -> [100m[97m  L  [39m[49m);
    [100m[97m  M  [39m[49m
    onKeyPress(() -> [100m[97m  N  [39m[49m);
    [100m[97m  O  [39m[49m
    afterDelay(2, () -> {
        [100m[97m  P  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  Q  [39m[49m
            onKeyPress(() -> [100m[97m  R  [39m[49m);
            [100m[97m  S  [39m[49m
        });
        [100m[97m  T  [39m[49m
        onKeyPress(() -> {
            [100m[97m  U  [39m[49m
            twice(() -> [100m[97m  V  [39m[49m);
            [100m[97m  W  [39m[49m
        });
        [100m[97m  X  [39m[49m
    });
    [100m[97m  Y  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    TICK
    TICK
    KEY
    KEY
    TICK
    TICK
    KEY
    KEY
    KEY
    TICK

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  O  [39m[49m
    [100m[97m  Y  [39m[49m

    TICK

    TICK
    [100m[97m  P  [39m[49m
    [100m[97m  T  [39m[49m
    [100m[97m  X  [39m[49m

    KEY
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  W  [39m[49m

    KEY
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m

    TICK
    [100m[97m  Q  [39m[49m
    [100m[97m  S  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  I  [39m[49m

    TICK

    KEY
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  R  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m

    KEY
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  R  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m

    KEY
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  R  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m

    TICK
    [100m[97m  G  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  I  [39m[49m

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;155m            [0m
[1m[38;5;16m[48;5;155m   PART 2   [0m
[1m[38;5;16m[48;5;155m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            onClick(() -> {
                if (x < 1) {
                    System.out.println("Hi!");
                }
            });

            if (x > 0) {
                onClick(() -> {
                    System.out.println("Bye!");
                });
            }

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;192m[48;5;22m              [0m
[1m[38;5;192m[48;5;22m   SOLUTION   [0m
[1m[38;5;192m[48;5;22m              [0m

    End of run()
    x=1
    x=2

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;69m            [0m
[1m[38;5;16m[48;5;69m   PART 1   [0m
[1m[38;5;16m[48;5;69m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    onClick(() -> {
        [100m[97m  B  [39m[49m
        afterDelay(2, () -> {
            [100m[97m  C  [39m[49m
            twice(() -> [100m[97m  D  [39m[49m);
            [100m[97m  E  [39m[49m
        });
        [100m[97m  F  [39m[49m
        twice(() -> {
            [100m[97m  G  [39m[49m
            twice(() -> [100m[97m  H  [39m[49m);
            [100m[97m  I  [39m[49m
        });
        [100m[97m  J  [39m[49m
    });
    [100m[97m  K  [39m[49m
    afterDelay(2, () -> {
        [100m[97m  L  [39m[49m
        afterDelay(1, () -> [100m[97m  M  [39m[49m);
        [100m[97m  N  [39m[49m
        onClick(() -> {
            [100m[97m  O  [39m[49m
            onKeyPress(() -> [100m[97m  P  [39m[49m);
            [100m[97m  Q  [39m[49m
        });
        [100m[97m  R  [39m[49m
    });
    [100m[97m  S  [39m[49m
    afterDelay(3, () -> {
        [100m[97m  T  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  U  [39m[49m
            onClick(() -> [100m[97m  V  [39m[49m);
            [100m[97m  W  [39m[49m
        });
        [100m[97m  X  [39m[49m
        onClick(() -> {
            [100m[97m  Y  [39m[49m
            onClick(() -> [100m[97m  Z  [39m[49m);
            [100m[97m  AA  [39m[49m
        });
        [100m[97m  AB  [39m[49m
    });
    [100m[97m  AC  [39m[49m
    twice(() -> {
        [100m[97m  AD  [39m[49m
        onClick(() -> {
            [100m[97m  AE  [39m[49m
            twice(() -> [100m[97m  AF  [39m[49m);
            [100m[97m  AG  [39m[49m
        });
        [100m[97m  AH  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  AI  [39m[49m
            onClick(() -> [100m[97m  AJ  [39m[49m);
            [100m[97m  AK  [39m[49m
        });
        [100m[97m  AL  [39m[49m
    });
    [100m[97m  AM  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    KEY
    TICK
    CLICK
    TICK
    CLICK
    CLICK
    CLICK
    TICK
    TICK
    TICK
    TICK

[1m[38;5;111m[48;5;17m              [0m
[1m[38;5;111m[48;5;17m   SOLUTION   [0m
[1m[38;5;111m[48;5;17m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  S  [39m[49m
    [100m[97m  AC  [39m[49m
    [100m[97m  AD  [39m[49m
    [100m[97m  AH  [39m[49m
    [100m[97m  AL  [39m[49m
    [100m[97m  AD  [39m[49m
    [100m[97m  AH  [39m[49m
    [100m[97m  AL  [39m[49m
    [100m[97m  AM  [39m[49m

    KEY

    TICK
    [100m[97m  AI  [39m[49m
    [100m[97m  AK  [39m[49m
    [100m[97m  AI  [39m[49m
    [100m[97m  AK  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  AJ  [39m[49m

    TICK
    [100m[97m  L  [39m[49m
    [100m[97m  N  [39m[49m
    [100m[97m  R  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  O  [39m[49m
    [100m[97m  Q  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  O  [39m[49m
    [100m[97m  Q  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  O  [39m[49m
    [100m[97m  Q  [39m[49m

    TICK
    [100m[97m  T  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  M  [39m[49m

    TICK
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  W  [39m[49m

    TICK

    TICK

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;203m            [0m
[1m[38;5;16m[48;5;203m   PART 2   [0m
[1m[38;5;16m[48;5;203m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            onClick(() -> {
                if (x < 2) {
                    System.out.println("Hi!");
                }
            });

            if (x > 1) {
                onClick(() -> {
                    System.out.println("Bye!");
                });
            }

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

    End of run()
    x=1
    Hi!
    x=2

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;85m            [0m
[1m[38;5;16m[48;5;85m   PART 1   [0m
[1m[38;5;16m[48;5;85m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    onClick(() -> {
        [100m[97m  B  [39m[49m
        twice(() -> {
            [100m[97m  C  [39m[49m
            twice(() -> [100m[97m  D  [39m[49m);
            [100m[97m  E  [39m[49m
        });
        [100m[97m  F  [39m[49m
        afterDelay(2, () -> {
            [100m[97m  G  [39m[49m
            twice(() -> [100m[97m  H  [39m[49m);
            [100m[97m  I  [39m[49m
        });
        [100m[97m  J  [39m[49m
    });
    [100m[97m  K  [39m[49m
    afterDelay(3, () -> {
        [100m[97m  L  [39m[49m
        onKeyPress(() -> {
            [100m[97m  M  [39m[49m
            onClick(() -> [100m[97m  N  [39m[49m);
            [100m[97m  O  [39m[49m
        });
        [100m[97m  P  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  Q  [39m[49m
            onClick(() -> [100m[97m  R  [39m[49m);
            [100m[97m  S  [39m[49m
        });
        [100m[97m  T  [39m[49m
    });
    [100m[97m  U  [39m[49m
    onClick(() -> {
        [100m[97m  V  [39m[49m
        onClick(() -> {
            [100m[97m  W  [39m[49m
            twice(() -> [100m[97m  X  [39m[49m);
            [100m[97m  Y  [39m[49m
        });
        [100m[97m  Z  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  AA  [39m[49m
            twice(() -> [100m[97m  AB  [39m[49m);
            [100m[97m  AC  [39m[49m
        });
        [100m[97m  AD  [39m[49m
    });
    [100m[97m  AE  [39m[49m
    onClick(() -> {
        [100m[97m  AF  [39m[49m
        afterDelay(2, () -> [100m[97m  AG  [39m[49m);
        [100m[97m  AH  [39m[49m
        onClick(() -> {
            [100m[97m  AI  [39m[49m
            onClick(() -> [100m[97m  AJ  [39m[49m);
            [100m[97m  AK  [39m[49m
        });
        [100m[97m  AL  [39m[49m
    });
    [100m[97m  AM  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    KEY
    CLICK
    TICK
    TICK
    CLICK
    TICK
    TICK
    CLICK
    KEY
    TICK
    TICK

[1m[38;5;121m[48;5;22m              [0m
[1m[38;5;121m[48;5;22m   SOLUTION   [0m
[1m[38;5;121m[48;5;22m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  U  [39m[49m
    [100m[97m  AE  [39m[49m
    [100m[97m  AM  [39m[49m

    KEY

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  Z  [39m[49m
    [100m[97m  AD  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AH  [39m[49m
    [100m[97m  AL  [39m[49m

    TICK
    [100m[97m  AA  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AC  [39m[49m

    TICK
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  AG  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  Z  [39m[49m
    [100m[97m  AD  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AH  [39m[49m
    [100m[97m  AL  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  Y  [39m[49m
    [100m[97m  AI  [39m[49m
    [100m[97m  AK  [39m[49m

    TICK
    [100m[97m  L  [39m[49m
    [100m[97m  P  [39m[49m
    [100m[97m  T  [39m[49m
    [100m[97m  AA  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AC  [39m[49m

    TICK
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  AG  [39m[49m
    [100m[97m  Q  [39m[49m
    [100m[97m  S  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  V  [39m[49m
    [100m[97m  Z  [39m[49m
    [100m[97m  AD  [39m[49m
    [100m[97m  AF  [39m[49m
    [100m[97m  AH  [39m[49m
    [100m[97m  AL  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  Y  [39m[49m
    [100m[97m  AI  [39m[49m
    [100m[97m  AK  [39m[49m
    [100m[97m  W  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  X  [39m[49m
    [100m[97m  Y  [39m[49m
    [100m[97m  AI  [39m[49m
    [100m[97m  AK  [39m[49m
    [100m[97m  AJ  [39m[49m
    [100m[97m  R  [39m[49m

    KEY
    [100m[97m  M  [39m[49m
    [100m[97m  O  [39m[49m

    TICK
    [100m[97m  AA  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AB  [39m[49m
    [100m[97m  AC  [39m[49m

    TICK
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  AG  [39m[49m

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;171m            [0m
[1m[38;5;16m[48;5;171m   PART 2   [0m
[1m[38;5;16m[48;5;171m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            if (x < 1) {
                onClick(() -> {
                    System.out.println("Hi!");
                });
            }

            onClick(() -> {
                if (x > 0) {
                    System.out.println("Bye!");
                }
            });

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;177m[48;5;53m              [0m
[1m[38;5;177m[48;5;53m   SOLUTION   [0m
[1m[38;5;177m[48;5;53m              [0m

    End of run()
    x=1
    Hi!
    Bye!
    x=2
    Hi!
    Bye!

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 1   [0m
[1m[38;5;16m[48;5;227m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    onClick(() -> [100m[97m  B  [39m[49m);
    [100m[97m  C  [39m[49m
    onClick(() -> [100m[97m  D  [39m[49m);
    [100m[97m  E  [39m[49m
    onClick(() -> {
        [100m[97m  F  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  G  [39m[49m
            twice(() -> [100m[97m  H  [39m[49m);
            [100m[97m  I  [39m[49m
        });
        [100m[97m  J  [39m[49m
        twice(() -> {
            [100m[97m  K  [39m[49m
            onKeyPress(() -> [100m[97m  L  [39m[49m);
            [100m[97m  M  [39m[49m
        });
        [100m[97m  N  [39m[49m
    });
    [100m[97m  O  [39m[49m
    afterDelay(2, () -> {
        [100m[97m  P  [39m[49m
        onKeyPress(() -> [100m[97m  Q  [39m[49m);
        [100m[97m  R  [39m[49m
        afterDelay(1, () -> [100m[97m  S  [39m[49m);
        [100m[97m  T  [39m[49m
    });
    [100m[97m  U  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    CLICK
    CLICK
    CLICK
    TICK
    TICK
    KEY
    TICK
    TICK
    TICK

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  O  [39m[49m
    [100m[97m  U  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  N  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  N  [39m[49m

    CLICK
    [100m[97m  B  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  N  [39m[49m

    TICK
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  I  [39m[49m

    TICK
    [100m[97m  P  [39m[49m
    [100m[97m  R  [39m[49m
    [100m[97m  T  [39m[49m

    KEY
    [100m[97m  L  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  Q  [39m[49m

    TICK
    [100m[97m  S  [39m[49m

    TICK

    TICK

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;81m            [0m
[1m[38;5;16m[48;5;81m   PART 2   [0m
[1m[38;5;16m[48;5;81m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            if (x > 1) {
                onClick(() -> {
                    System.out.println("Hi!");
                });
            }

            onClick(() -> {
                if (x < 2) {
                    System.out.println("Bye!");
                }
            });

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    End of run()
    x=1
    Bye!
    x=2

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Suppose we are in an environment where [4mCLICK[24m, [4mTICK[24m, and [4mKEY[24m events can occur,
and we have the following functions available:

[4monClick(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mCLICK[24m event.

[4monKeyPress(closure)[24m

  â”‚ Executes [4mclosure[24m after every subsequent [4mKEY[24m event.

[4mafterDelay(tickCount, closure)[24m

  â”‚ Executes [4mclosure[24m once after exactly [4mtickCount[24m [4mTICK[24m events have occurred.

[4mtwice(closure)[24m

  â”‚ Immediately executes [4mclosure[24m two times.

Multiple closures can be registered to handle the same event. If this happens,
they execute in the order they were registered.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;205m            [0m
[1m[38;5;16m[48;5;205m   PART 1   [0m
[1m[38;5;16m[48;5;205m            [0m

Consider the following code:

    [100m[97m  A  [39m[49m
    afterDelay(1, () -> [100m[97m  B  [39m[49m);
    [100m[97m  C  [39m[49m
    twice(() -> {
        [100m[97m  D  [39m[49m
        afterDelay(1, () -> {
            [100m[97m  E  [39m[49m
            twice(() -> [100m[97m  F  [39m[49m);
            [100m[97m  G  [39m[49m
        });
        [100m[97m  H  [39m[49m
        onKeyPress(() -> {
            [100m[97m  I  [39m[49m
            onClick(() -> [100m[97m  J  [39m[49m);
            [100m[97m  K  [39m[49m
        });
        [100m[97m  L  [39m[49m
    });
    [100m[97m  M  [39m[49m
    afterDelay(3, () -> {
        [100m[97m  N  [39m[49m
        afterDelay(2, () -> [100m[97m  O  [39m[49m);
        [100m[97m  P  [39m[49m
        onClick(() -> [100m[97m  Q  [39m[49m);
        [100m[97m  R  [39m[49m
    });
    [100m[97m  S  [39m[49m
    onClick(() -> [100m[97m  T  [39m[49m);
    [100m[97m  U  [39m[49m

Write out the order in which all the marked statements will execute given the
following sequence of events (showing both the marked statements and the event
names):

    TICK
    TICK
    CLICK
    KEY
    TICK
    TICK
    CLICK
    KEY
    TICK
    TICK

[1m[38;5;211m[48;5;52m              [0m
[1m[38;5;211m[48;5;52m   SOLUTION   [0m
[1m[38;5;211m[48;5;52m              [0m

    [100m[97m  A  [39m[49m
    [100m[97m  C  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  D  [39m[49m
    [100m[97m  H  [39m[49m
    [100m[97m  L  [39m[49m
    [100m[97m  M  [39m[49m
    [100m[97m  S  [39m[49m
    [100m[97m  U  [39m[49m

    TICK
    [100m[97m  B  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m
    [100m[97m  E  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  F  [39m[49m
    [100m[97m  G  [39m[49m

    TICK

    CLICK
    [100m[97m  T  [39m[49m

    KEY
    [100m[97m  I  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  K  [39m[49m

    TICK
    [100m[97m  N  [39m[49m
    [100m[97m  P  [39m[49m
    [100m[97m  R  [39m[49m

    TICK

    CLICK
    [100m[97m  T  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  J  [39m[49m
    [100m[97m  Q  [39m[49m

    KEY
    [100m[97m  I  [39m[49m
    [100m[97m  K  [39m[49m
    [100m[97m  I  [39m[49m
    [100m[97m  K  [39m[49m

    TICK
    [100m[97m  O  [39m[49m

    TICK

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;83m            [0m
[1m[38;5;16m[48;5;83m   PART 2   [0m
[1m[38;5;16m[48;5;83m            [0m

Consider the following code:

    public class StatefulPuzzle {
        private int x = 0;

        public void run() {
            onClick(() -> {
                x++;
                System.out.println("x=" + x);
            });

            if (x < 2) {
                onClick(() -> {
                    System.out.println("Hi!");
                });
            }

            onClick(() -> {
                if (x > 0) {
                    System.out.println("Bye!");
                }
            });

            System.out.println("End of run()");
        }
    }

Given a call to [4mrun()[24m followed by two [4mCLICK[24m events, what would this code print?

[1m[38;5;120m[48;5;22m              [0m
[1m[38;5;120m[48;5;22m   SOLUTION   [0m
[1m[38;5;120m[48;5;22m              [0m

    End of run()
    x=1
    Hi!
    Bye!
    x=2
    Hi!
    Bye!

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[0m
***************** PLEASE NOTE ******************
***                                          ***
*** The puzzle above has a difficulty of 2.  ***
*** The difficulty level to get credit is 0. ***
***                                          ***
************************************************

To try the puzzle at the goal difficulty, generate a puzzle without the --difficulty option.

Want a bigger challenge? Try a harder difficulty level:

  bin/puzzle gen clos --difficulty 3

