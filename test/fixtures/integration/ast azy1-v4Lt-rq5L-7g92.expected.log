Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
[0J────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;99m            [0m
[1m[38;5;16m[48;5;99m   PART 1   [0m
[1m[38;5;16m[48;5;99m            [0m

Given the following variables:

    int corpis = 6;
    double in = 5.0;
    double ho = 4.0;
    int urm = 8;

...draw the AST and evaluation tree for the following expression:

    corpis % in - ho * urm

[1m[38;5;141m[48;5;17m              [0m
[1m[38;5;141m[48;5;17m   SOLUTION   [0m
[1m[38;5;141m[48;5;17m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;215m            [0m
[1m[38;5;16m[48;5;215m   PART 2   [0m
[1m[38;5;16m[48;5;215m            [0m

Given the following variables:

    double voawess = 4.0;
    int up = 9;
    boolean tela = true;

...draw the AST and evaluation tree for the following expression:

    voawess <= 1 && (up != 3 && tela)

[1m[38;5;222m[48;5;52m              [0m
[1m[38;5;222m[48;5;52m   SOLUTION   [0m
[1m[38;5;222m[48;5;52m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;87m            [0m
[1m[38;5;16m[48;5;87m   PART 3   [0m
[1m[38;5;16m[48;5;87m            [0m

Draw the AST and evaluation tree for the following expression:

    0 + "1" + 2 + 3 + 4

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 1   [0m
[1m[38;5;16m[48;5;207m            [0m

Given the following variables:

    double danla = 3.0;

...draw the AST and evaluation tree for the following expression:

    0 + 7 / 1 - danla

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;155m            [0m
[1m[38;5;16m[48;5;155m   PART 2   [0m
[1m[38;5;16m[48;5;155m            [0m

Given the following variables:

    int hun = 3;
    int feeman = 4;
    int zio = 7;
    double o = 3.0;

...draw the AST and evaluation tree for the following expression:

    (1 >= hun && feeman == zio && o > 7)

[1m[38;5;192m[48;5;22m              [0m
[1m[38;5;192m[48;5;22m   SOLUTION   [0m
[1m[38;5;192m[48;5;22m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;69m            [0m
[1m[38;5;16m[48;5;69m   PART 3   [0m
[1m[38;5;16m[48;5;69m            [0m

Draw the AST and evaluation tree for the following expression:

    (0 + 1 + "2" + 3) + 4

[1m[38;5;111m[48;5;17m              [0m
[1m[38;5;111m[48;5;17m   SOLUTION   [0m
[1m[38;5;111m[48;5;17m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;203m            [0m
[1m[38;5;16m[48;5;203m   PART 1   [0m
[1m[38;5;16m[48;5;203m            [0m

Given the following variables:

    int ir = 3;
    double pouphtesm = 4.0;
    int ta = 1;

...draw the AST and evaluation tree for the following expression:

    ir * pouphtesm % ta - 2

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;84m            [0m
[1m[38;5;16m[48;5;84m   PART 2   [0m
[1m[38;5;16m[48;5;84m            [0m

Given the following variables:

    double prel = 5.0;
    double deflol = 5.0;
    double dias = 2.0;

...draw the AST and evaluation tree for the following expression:

    prel == deflol || dias < 8 && 0 > 0

[1m[38;5;121m[48;5;22m              [0m
[1m[38;5;121m[48;5;22m   SOLUTION   [0m
[1m[38;5;121m[48;5;22m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;171m            [0m
[1m[38;5;16m[48;5;171m   PART 3   [0m
[1m[38;5;16m[48;5;171m            [0m

Draw the AST and evaluation tree for the following expression:

    0 + 1 + "2" + 3 + 4

[1m[38;5;177m[48;5;17m              [0m
[1m[38;5;177m[48;5;17m   SOLUTION   [0m
[1m[38;5;177m[48;5;17m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 1   [0m
[1m[38;5;16m[48;5;227m            [0m

Given the following variables:

    double tegnpeth = 5.0;

...draw the AST and evaluation tree for the following expression:

    9 / 3 * 9 - tegnpeth

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;87m            [0m
[1m[38;5;16m[48;5;87m   PART 2   [0m
[1m[38;5;16m[48;5;87m            [0m

Given the following variables:

    boolean melpid = true;
    boolean gamod = false;
    int sti = 4;

...draw the AST and evaluation tree for the following expression:

    melpid && gamod && sti != 7

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;205m            [0m
[1m[38;5;16m[48;5;205m   PART 3   [0m
[1m[38;5;16m[48;5;205m            [0m

Draw the AST and evaluation tree for the following expression:

    0 + 1 + "2" + 3 + 4

[1m[38;5;212m[48;5;52m              [0m
[1m[38;5;212m[48;5;52m   SOLUTION   [0m
[1m[38;5;212m[48;5;52m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;119m            [0m
[1m[38;5;16m[48;5;119m   PART 1   [0m
[1m[38;5;16m[48;5;119m            [0m

Given the following variables:

    double eu = 3.0;

...draw the AST and evaluation tree for the following expression:

    (5 % 1 * eu) + 7

[1m[38;5;156m[48;5;22m              [0m
[1m[38;5;156m[48;5;22m   SOLUTION   [0m
[1m[38;5;156m[48;5;22m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;63m            [0m
[1m[38;5;16m[48;5;63m   PART 2   [0m
[1m[38;5;16m[48;5;63m            [0m

Given the following variables:

    double ossgead = 1.0;
    double jerttre = 2.0;
    int cieng = 8;

...draw the AST and evaluation tree for the following expression:

    4 <= ossgead && jerttre > cieng && 5 > 0

[1m[38;5;105m[48;5;17m              [0m
[1m[38;5;105m[48;5;17m   SOLUTION   [0m
[1m[38;5;105m[48;5;17m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;209m            [0m
[1m[38;5;16m[48;5;209m   PART 3   [0m
[1m[38;5;16m[48;5;209m            [0m

Draw the AST and evaluation tree for the following expression:

    (0 + 1 + 2 + 3) + "4"

[1m[38;5;216m[48;5;52m              [0m
[1m[38;5;216m[48;5;52m   SOLUTION   [0m
[1m[38;5;216m[48;5;52m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

────────────────────────────────────────────────────────────────────────────────

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;86m            [0m
[1m[38;5;16m[48;5;86m   PART 1   [0m
[1m[38;5;16m[48;5;86m            [0m

Given the following variables:

    double mordche = 1.0;
    int vapton = 6;
    int a = 7;

...draw the AST and evaluation tree for the following expression:

    3 * (mordche * vapton % a)

[1m[38;5;122m[48;5;22m              [0m
[1m[38;5;122m[48;5;22m   SOLUTION   [0m
[1m[38;5;122m[48;5;22m              [0m

[3m<< See window titled “Part 1 Solution” >>[23m

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 2   [0m
[1m[38;5;16m[48;5;207m            [0m

Given the following variables:

    double puemusp = 1.0;
    double cansioc = 1.0;
    double irt = 4.0;

...draw the AST and evaluation tree for the following expression:

    9 >= puemusp && 4 < cansioc && 8 <= irt

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

[3m<< See window titled “Part 2 Solution” >>[23m

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄

[1m[38;5;16m[48;5;191m            [0m
[1m[38;5;16m[48;5;191m   PART 3   [0m
[1m[38;5;16m[48;5;191m            [0m

Draw the AST and evaluation tree for the following expression:

    0 + 1 + 2 + 3 + "4"

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

[3m<< See window titled “Part 3 Solution” >>[23m

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

────────────────────────────────────────────────────────────────────────────────

[0m
Want to practice more basics first? Try a simpler puzzle:

  bin/puzzle gen ast --difficulty 1

Want a bigger challenge? Try a harder difficulty level:

  bin/puzzle gen ast --difficulty 3

