[0Jâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

For each of the Java expressions below:

  - Draw an AST for the expression.
  - Show how the expression evaluates at each node in the tree.

Be sure that your tree accurately reflects how Java would evaluate the
expression.

[1m[38;5;16m[48;5;171m            [0m
[1m[38;5;16m[48;5;171m   PART 1   [0m
[1m[38;5;16m[48;5;171m            [0m

Given the following variables:

    double lalbren = 5.0;
    int skurar = 8;

...draw the AST and evaluation tree for the following expression:

    lalbren - 7 + skurar % 7

[1m[38;5;177m[48;5;53m              [0m
[1m[38;5;177m[48;5;53m   SOLUTION   [0m
[1m[38;5;177m[48;5;53m              [0m

<< drawing in canvas window >>

Things to double-check in your solution:

  - Do you have the left and right branches on the correct side?
  - Did you indicate the difference between ints and floating point values?

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 2   [0m
[1m[38;5;16m[48;5;227m            [0m

Given the following variables:

    boolean kol = false;
    boolean cerdci = true;
    int alosm = 8;

...draw the AST and evaluation tree for the following expression:

    kol && cerdci && alosm >= 5 || 9 <= 3

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

<< drawing in canvas window >>

Things to double-check in your solution:

  - Does your tree correctly reflect the precedence of && and ||?
  - Did you correctly show short-circuiting? (That is when the right branch of
    && or || is never evaluated because the left branch already determines the
    answer.)

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;81m            [0m
[1m[38;5;16m[48;5;81m   PART 3   [0m
[1m[38;5;16m[48;5;81m            [0m

Draw the AST and evaluation tree for the following expression:

    0 + 1 + 2 + 3 + "4" + 5

[1m[38;5;117m[48;5;23m              [0m
[1m[38;5;117m[48;5;23m   SOLUTION   [0m
[1m[38;5;117m[48;5;23m              [0m

<< drawing in canvas window >>

Things to double-check in your solution:

  - Did you indicate the distinction between ints and Strings?
  - Are your left/right branches correct?

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[0m
Want to practice more basics first? Try a simpler puzzle:

  bin/puzzle gen ast --difficulty 1

Want a bigger challenge? Try a harder difficulty level:

  bin/puzzle gen ast --difficulty 3

