Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
[0Jâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;86m            [0m
[1m[38;5;16m[48;5;86m   PART 1   [0m
[1m[38;5;16m[48;5;86m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (frehum() != 8 || druck() || (!ru || seiGroci() || coem() < 8) && bise() < 5) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        conra();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    if (frehum() == 8 && !druck() && (ru && !seiGroci() && coem() >= 8 || bise() >= 5)) {
        conra();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 2   [0m
[1m[38;5;16m[48;5;207m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (pec > mape) {
        return true;
    }
    if (neft) {
        if (us > recKasos()) {
            return true;
        }
    }
    if (wism == 4) {
        if (!spho) {
            return true;
        }
        if (piru < 7) {
            return true;
        }
        if (!si) {
            return true;
        }
    }
    return false;

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    return pec > mape || neft && us > recKasos() || wism == 4 && (!spho || piru < 7 || !si);

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    if (pec <= mape) {
        if (!neft) {
            if (wism != 4) {
                return false;
            }
            if (spho) {
                if (piru >= 7) {
                    if (si) {
                        return false;
                    }
                }
            }
        }
        if (us <= recKasos()) {
            if (wism != 4) {
                return false;
            }
            if (spho) {
                if (piru >= 7) {
                    if (si) {
                        return false;
                    }
                }
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;191m            [0m
[1m[38;5;16m[48;5;191m   PART 3   [0m
[1m[38;5;16m[48;5;191m            [0m

Simplify the following messy chain of conditionals:

    if (!qam) {
        nidma();
    } else if (mur == false && qam) {
        gocLah();
    }
    if (hir == true && qam && mur != false) {
        hilPece();
    }
    if (me == false && qam && mur != false && hir != true) {
        frica();
    } else if (fino == true && qam && mur != false && hir != true && me != false) {
        pessa();
    } else if (qam && mur != false && hir != true && me != false && fino != true) {
        proe();
    }

[1m[38;5;192m[48;5;22m              [0m
[1m[38;5;192m[48;5;22m   SOLUTION   [0m
[1m[38;5;192m[48;5;22m              [0m

    if (!qam) {
        nidma();
    } else if (!mur) {
        gocLah();
    } else if (hir) {
        hilPece();
    } else if (!me) {
        frica();
    } else if (fino) {
        pessa();
    } else {
        proe();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;69m            [0m
[1m[38;5;16m[48;5;69m   PART 1   [0m
[1m[38;5;16m[48;5;69m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!ener && (!(!(cas && gricas()) || pui != sasDehoc()) || !o && vutlan())) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        onis();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;111m[48;5;17m              [0m
[1m[38;5;111m[48;5;17m   SOLUTION   [0m
[1m[38;5;111m[48;5;17m              [0m

    if (ener || (!(cas && gricas()) || pui != sasDehoc()) && (o || !vutlan())) {
        onis();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;203m            [0m
[1m[38;5;16m[48;5;203m   PART 2   [0m
[1m[38;5;16m[48;5;203m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (dran) {
        return true;
    }
    if (eaed) {
        if (cher) {
            if (ja) {
                if (!o) {
                    if (ro != istup()) {
                        return true;
                    }
                }
            }
            if (ioe >= 1) {
                if (!o) {
                    if (ro != istup()) {
                        return true;
                    }
                }
            }
        }
    }
    return false;

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

    return dran || eaed && cher && (ja || ioe >= 1) && !o && ro != istup();

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

    if (!dran) {
        if (!eaed) {
            return false;
        }
        if (!cher) {
            return false;
        }
        if (!ja) {
            if (ioe < 1) {
                return false;
            }
        }
        if (o) {
            return false;
        }
        if (ro == istup()) {
            return false;
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;84m            [0m
[1m[38;5;16m[48;5;84m   PART 3   [0m
[1m[38;5;16m[48;5;84m            [0m

Simplify the following messy chain of conditionals:

    if (thed != e) {
        hocTrobzo();
    } else if (tiu == true && thed == e) {
        vass();
    }
    if (u == false && thed == e && tiu != true) {
        priTrert();
    }
    if ((cre == ermi) == true && thed == e && tiu != true && u != false) {
        seng();
    }
    if (poc && thed == e && tiu != true && u != false && (cre == ermi) != true) {
        cuiRiac();
    } else if (acko && thed == e && tiu != true && u != false && (cre == ermi) != true && !poc) {
        esron();
    }

[1m[38;5;121m[48;5;22m              [0m
[1m[38;5;121m[48;5;22m   SOLUTION   [0m
[1m[38;5;121m[48;5;22m              [0m

    if (thed != e) {
        hocTrobzo();
    } else if (tiu) {
        vass();
    } else if (!u) {
        priTrert();
    } else if (cre == ermi) {
        seng();
    } else if (poc) {
        cuiRiac();
    } else if (acko) {
        esron();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;135m            [0m
[1m[38;5;16m[48;5;135m   PART 1   [0m
[1m[38;5;16m[48;5;135m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (iinAuboi() && !(lo == 1) && (mokmos() == 0 || stal()) && (swaod() || !ed)) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        preva();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;177m[48;5;17m              [0m
[1m[38;5;177m[48;5;17m   SOLUTION   [0m
[1m[38;5;177m[48;5;17m              [0m

    if (!iinAuboi() || lo == 1 || mokmos() != 0 && !stal() || !swaod() && ed) {
        preva();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 2   [0m
[1m[38;5;16m[48;5;227m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (hi == deshid()) {
        if (qeddi()) {
            if (dol == mo) {
                if (el) {
                    return true;
                }
            }
        }
        if (iscias()) {
            if (cird()) {
                if (el) {
                    return true;
                }
            }
        }
        if (beco()) {
            if (cird()) {
                if (el) {
                    return true;
                }
            }
        }
    }
    return false;

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    return hi == deshid() && (qeddi() && dol == mo || (iscias() || beco()) && cird()) && el;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    if (hi != deshid()) {
        return false;
    }
    if (!qeddi()) {
        if (!iscias()) {
            if (!beco()) {
                return false;
            }
        }
        if (!cird()) {
            return false;
        }
    }
    if (dol != mo) {
        if (!iscias()) {
            if (!beco()) {
                return false;
            }
        }
        if (!cird()) {
            return false;
        }
    }
    if (!el) {
        return false;
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;87m            [0m
[1m[38;5;16m[48;5;87m   PART 3   [0m
[1m[38;5;16m[48;5;87m            [0m

Simplify the following messy chain of conditionals:

    if (phe == mula) {
        maraic();
    }
    if (ou == true && phe != mula) {
        senia();
    } else if (i == true && phe != mula && ou != true) {
        ostria();
    } else if (oss == true && phe != mula && ou != true && i != true) {
        cick();
    }
    if (de == true && phe != mula && ou != true && i != true && oss != true) {
        encac();
    }
    if (lus == true && phe != mula && ou != true && i != true && oss != true && de != true) {
        peast();
    }

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    if (phe == mula) {
        maraic();
    } else if (ou) {
        senia();
    } else if (i) {
        ostria();
    } else if (oss) {
        cick();
    } else if (de) {
        encac();
    } else if (lus) {
        peast();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;206m            [0m
[1m[38;5;16m[48;5;206m   PART 1   [0m
[1m[38;5;16m[48;5;206m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (o && issces() && droo() || hac && cen <= esmEnghal() && !noo) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        thruwn();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;212m[48;5;52m              [0m
[1m[38;5;212m[48;5;52m   SOLUTION   [0m
[1m[38;5;212m[48;5;52m              [0m

    if ((!o || !issces() || !droo()) && (!hac || cen > esmEnghal() || noo)) {
        thruwn();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;119m            [0m
[1m[38;5;16m[48;5;119m   PART 2   [0m
[1m[38;5;16m[48;5;119m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (enki) {
        if (cudod() > 8) {
            if (unict()) {
                return true;
            }
        }
        if (in) {
            if (un) {
                if (unict()) {
                    return true;
                }
            }
            if (!tu) {
                if (unict()) {
                    return true;
                }
            }
        }
    }
    if (rint < tras) {
        if (cudod() > 8) {
            if (unict()) {
                return true;
            }
        }
        if (in) {
            if (un) {
                if (unict()) {
                    return true;
                }
            }
            if (!tu) {
                if (unict()) {
                    return true;
                }
            }
        }
    }
    return false;

[1m[38;5;156m[48;5;22m              [0m
[1m[38;5;156m[48;5;22m   SOLUTION   [0m
[1m[38;5;156m[48;5;22m              [0m

    return (enki || rint < tras) && (cudod() > 8 || in && (un || !tu)) && unict();

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;156m[48;5;22m              [0m
[1m[38;5;156m[48;5;22m   SOLUTION   [0m
[1m[38;5;156m[48;5;22m              [0m

    if (!enki) {
        if (rint >= tras) {
            return false;
        }
    }
    if (cudod() <= 8) {
        if (!in) {
            return false;
        }
        if (!un) {
            if (tu) {
                return false;
            }
        }
    }
    if (!unict()) {
        return false;
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;63m            [0m
[1m[38;5;16m[48;5;63m   PART 3   [0m
[1m[38;5;16m[48;5;63m            [0m

Simplify the following messy chain of conditionals:

    if (pto == 8) {
        pleVoec();
    } else if (pu == true && pto != 8) {
        cibia();
    }
    if (!kree && pto != 8 && pu != true) {
        facNodoc();
    }
    if (e == true && pto != 8 && pu != true && kree) {
        thiCia();
    }
    if (co != eae && pto != 8 && pu != true && kree && e != true) {
        ogncou();
    }
    if (caf == true && pto != 8 && pu != true && kree && e != true && co == eae) {
        phao();
    }

[1m[38;5;105m[48;5;17m              [0m
[1m[38;5;105m[48;5;17m   SOLUTION   [0m
[1m[38;5;105m[48;5;17m              [0m

    if (pto == 8) {
        pleVoec();
    } else if (pu) {
        cibia();
    } else if (!kree) {
        facNodoc();
    } else if (e) {
        thiCia();
    } else if (co != eae) {
        ogncou();
    } else if (caf) {
        phao();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;209m            [0m
[1m[38;5;16m[48;5;209m   PART 1   [0m
[1m[38;5;16m[48;5;209m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!(alwu == 2 && fesVije()) && (!poupra() || !daspas() || pru || ei == a)) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        housa();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;216m[48;5;52m              [0m
[1m[38;5;216m[48;5;52m   SOLUTION   [0m
[1m[38;5;216m[48;5;52m              [0m

    if (alwu == 2 && fesVije() || poupra() && daspas() && !pru && ei != a) {
        housa();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;85m            [0m
[1m[38;5;16m[48;5;85m   PART 2   [0m
[1m[38;5;16m[48;5;85m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (edent()) {
        if (uer) {
            return true;
        }
        if (mic != drio()) {
            return true;
        }
    }
    if (dreuis() >= 3) {
        return true;
    }
    if (spo) {
        return true;
    }
    if (an <= 7) {
        if (hite < osscic()) {
            return true;
        }
    }
    return false;

[1m[38;5;122m[48;5;22m              [0m
[1m[38;5;122m[48;5;22m   SOLUTION   [0m
[1m[38;5;122m[48;5;22m              [0m

    return edent() && (uer || mic != drio()) || dreuis() >= 3 || spo || an <= 7 && hite < osscic();

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;122m[48;5;22m              [0m
[1m[38;5;122m[48;5;22m   SOLUTION   [0m
[1m[38;5;122m[48;5;22m              [0m

    if (!edent()) {
        if (dreuis() < 3) {
            if (!spo) {
                if (an > 7) {
                    return false;
                }
                if (hite >= osscic()) {
                    return false;
                }
            }
        }
    }
    if (!uer) {
        if (mic == drio()) {
            if (dreuis() < 3) {
                if (!spo) {
                    if (an > 7) {
                        return false;
                    }
                    if (hite >= osscic()) {
                        return false;
                    }
                }
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 3   [0m
[1m[38;5;16m[48;5;207m            [0m

Simplify the following messy chain of conditionals:

    if (armi == false) {
        inea();
    } else if (hism == true && armi != false) {
        peng();
    }
    if (sed < whe && armi != false && hism != true) {
        rusSasssa();
    } else if (ece == false && armi != false && hism != true && sed >= whe) {
        acrass();
    }
    if (cese > 5 && armi != false && hism != true && sed >= whe && ece != false) {
        ushbor();
    } else if (ow == true && armi != false && hism != true && sed >= whe && ece != false && cese <= 5) {
        aipoh();
    }

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    if (!armi) {
        inea();
    } else if (hism) {
        peng();
    } else if (sed < whe) {
        rusSasssa();
    } else if (!ece) {
        acrass();
    } else if (cese > 5) {
        ushbor();
    } else if (ow) {
        aipoh();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 1   [0m
[1m[38;5;16m[48;5;227m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!ian && (criThos() || phiol() || !(e != 4)) && rasm != 6 || flinid()) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        ocnur();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    if ((ian || !criThos() && !phiol() && e != 4 || rasm == 6) && !flinid()) {
        ocnur();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;75m            [0m
[1m[38;5;16m[48;5;75m   PART 2   [0m
[1m[38;5;16m[48;5;75m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (pesi()) {
        if (moos()) {
            return true;
        }
    }
    if (uiss()) {
        if (haa) {
            if (e) {
                return true;
            }
        }
    }
    if (ec != 2) {
        if (e) {
            return true;
        }
    }
    if (giod >= 7) {
        if (e) {
            return true;
        }
    }
    return false;

[1m[38;5;117m[48;5;17m              [0m
[1m[38;5;117m[48;5;17m   SOLUTION   [0m
[1m[38;5;117m[48;5;17m              [0m

    return pesi() && moos() || (uiss() && haa || ec != 2 || giod >= 7) && e;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;117m[48;5;17m              [0m
[1m[38;5;117m[48;5;17m   SOLUTION   [0m
[1m[38;5;117m[48;5;17m              [0m

    if (!pesi()) {
        if (!uiss()) {
            if (ec == 2) {
                if (giod < 7) {
                    return false;
                }
            }
        }
        if (!haa) {
            if (ec == 2) {
                if (giod < 7) {
                    return false;
                }
            }
        }
        if (!e) {
            return false;
        }
    }
    if (!moos()) {
        if (!uiss()) {
            if (ec == 2) {
                if (giod < 7) {
                    return false;
                }
            }
        }
        if (!haa) {
            if (ec == 2) {
                if (giod < 7) {
                    return false;
                }
            }
        }
        if (!e) {
            return false;
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;204m            [0m
[1m[38;5;16m[48;5;204m   PART 3   [0m
[1m[38;5;16m[48;5;204m            [0m

Simplify the following messy chain of conditionals:

    if (roa >= 7) {
        bildi();
    }
    if (al == true && roa < 7) {
        enho();
    }
    if (glo > 5 == true && roa < 7 && al != true) {
        jewChepi();
    } else if ((jas == 5) == true && roa < 7 && al != true && glo > 5 != true) {
        kecGord();
    }
    if (fos == true && roa < 7 && al != true && glo > 5 != true && (jas == 5) != true) {
        arac();
    } else if (roa < 7 && al != true && glo > 5 != true && (jas == 5) != true && fos != true) {
        pisDeouoc();
    }

[1m[38;5;211m[48;5;52m              [0m
[1m[38;5;211m[48;5;52m   SOLUTION   [0m
[1m[38;5;211m[48;5;52m              [0m

    if (roa >= 7) {
        bildi();
    } else if (al) {
        enho();
    } else if (glo > 5) {
        jewChepi();
    } else if (jas == 5) {
        kecGord();
    } else if (fos) {
        arac();
    } else {
        pisDeouoc();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[0m
***************** PLEASE NOTE ******************
***                                          ***
*** The puzzle above has a difficulty of 5.  ***
*** The difficulty level to get credit is 1. ***
***                                          ***
************************************************

To try the puzzle at the goal difficulty, generate a puzzle without the --difficulty option.

Want to practice more basics first? Try a simpler puzzle:

  bin/puzzle gen bool --difficulty 4

Want a bigger challenge? Try a harder difficulty level:

  bin/puzzle gen bool --difficulty 6

