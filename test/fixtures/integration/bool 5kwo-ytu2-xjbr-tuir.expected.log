Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
Picked up _JAVA_OPTIONS: -Dfile.encoding=UTF-8
[0Jâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;86m            [0m
[1m[38;5;16m[48;5;86m   PART 1   [0m
[1m[38;5;16m[48;5;86m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!(is != cang) || roth || eock() > mu || !ru && (coem() < 8 || frehum() != 8)) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        ollTre();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    if (is != cang && !roth && eock() <= mu && (ru || coem() >= 8 && frehum() == 8)) {
        ollTre();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 2   [0m
[1m[38;5;16m[48;5;207m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (il) {
        if (te) {
            return true;
        }
    }
    if (geshbo()) {
        if (pengpi() == 9) {
            return true;
        }
    }
    if (griNuro() < 6) {
        return true;
    }
    if (duss) {
        return true;
    }
    if (assa) {
        return true;
    }
    return false;

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    return il && te || geshbo() && pengpi() == 9 || griNuro() < 6 || duss || assa;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    if (!il) {
        if (!geshbo()) {
            if (griNuro() >= 6) {
                if (!duss) {
                    if (!assa) {
                        return false;
                    }
                }
            }
        }
        if (pengpi() != 9) {
            if (griNuro() >= 6) {
                if (!duss) {
                    if (!assa) {
                        return false;
                    }
                }
            }
        }
    }
    if (!te) {
        if (!geshbo()) {
            if (griNuro() >= 6) {
                if (!duss) {
                    if (!assa) {
                        return false;
                    }
                }
            }
        }
        if (pengpi() != 9) {
            if (griNuro() >= 6) {
                if (!duss) {
                    if (!assa) {
                        return false;
                    }
                }
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;191m            [0m
[1m[38;5;16m[48;5;191m   PART 3   [0m
[1m[38;5;16m[48;5;191m            [0m

Simplify the following messy chain of conditionals:

    if (alge == true) {
        spho();
    } else if ((wism == 4) == true && alge != true) {
        tren();
    }
    if (mur > an && alge != true && (wism == 4) != true) {
        onhas();
    } else if (cing == false && alge != true && (wism == 4) != true && mur <= an) {
        sagren();
    }
    if ((a == 4) == true && alge != true && (wism == 4) != true && mur <= an && cing != false) {
        idtrac();
    }
    if (!proe && alge != true && (wism == 4) != true && mur <= an && cing != false && (a == 4) != true) {
        suest();
    }

[1m[38;5;192m[48;5;22m              [0m
[1m[38;5;192m[48;5;22m   SOLUTION   [0m
[1m[38;5;192m[48;5;22m              [0m

    if (alge) {
        spho();
    } else if (wism == 4) {
        tren();
    } else if (mur > an) {
        onhas();
    } else if (!cing) {
        sagren();
    } else if (a == 4) {
        idtrac();
    } else if (!proe) {
        suest();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;69m            [0m
[1m[38;5;16m[48;5;69m   PART 1   [0m
[1m[38;5;16m[48;5;69m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!(spla || ed) || !grif && tessun() || dass && eern()) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        iorPhocpe();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;111m[48;5;17m              [0m
[1m[38;5;111m[48;5;17m   SOLUTION   [0m
[1m[38;5;111m[48;5;17m              [0m

    if ((spla || ed) && (grif || !tessun()) && (!dass || !eern())) {
        iorPhocpe();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;203m            [0m
[1m[38;5;16m[48;5;203m   PART 2   [0m
[1m[38;5;16m[48;5;203m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (ondel()) {
        if (rasick()) {
            if (niec >= 9) {
                if (antva() != da) {
                    return true;
                }
                if (nesEwdo()) {
                    if (draee()) {
                        return true;
                    }
                }
                if (fleoc()) {
                    return true;
                }
            }
        }
    }
    return false;

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

    return ondel() && rasick() && niec >= 9 && (antva() != da || nesEwdo() && draee() || fleoc());

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;210m[48;5;52m              [0m
[1m[38;5;210m[48;5;52m   SOLUTION   [0m
[1m[38;5;210m[48;5;52m              [0m

    if (!ondel()) {
        return false;
    }
    if (!rasick()) {
        return false;
    }
    if (niec < 9) {
        return false;
    }
    if (antva() == da) {
        if (!nesEwdo()) {
            if (!fleoc()) {
                return false;
            }
        }
        if (!draee()) {
            if (!fleoc()) {
                return false;
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;84m            [0m
[1m[38;5;16m[48;5;84m   PART 3   [0m
[1m[38;5;16m[48;5;84m            [0m

Simplify the following messy chain of conditionals:

    if (ciw == true) {
        trobzo();
    }
    if (vass == true && ciw != true) {
        frio();
    } else if (se == true && ciw != true && vass != true) {
        roodci();
    } else if (eled == true && ciw != true && vass != true && se != true) {
        niaith();
    }
    if (houn != ke && ciw != true && vass != true && se != true && eled != true) {
        auboi();
    } else if (ciw != true && vass != true && se != true && eled != true && houn == ke) {
        peiIasm();
    }

[1m[38;5;121m[48;5;22m              [0m
[1m[38;5;121m[48;5;22m   SOLUTION   [0m
[1m[38;5;121m[48;5;22m              [0m

    if (ciw) {
        trobzo();
    } else if (vass) {
        frio();
    } else if (se) {
        roodci();
    } else if (eled) {
        niaith();
    } else if (houn != ke) {
        auboi();
    } else {
        peiIasm();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;135m            [0m
[1m[38;5;16m[48;5;135m   PART 1   [0m
[1m[38;5;16m[48;5;135m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if ((umo > 6 || ahec() == 2 && maeche()) && isdu == 4 && (!(arac == 1) || ael != 8)) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        rilToing();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;177m[48;5;17m              [0m
[1m[38;5;177m[48;5;17m   SOLUTION   [0m
[1m[38;5;177m[48;5;17m              [0m

    if (umo <= 6 && (ahec() != 2 || !maeche()) || isdu != 4 || arac == 1 && ael == 8) {
        rilToing();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 2   [0m
[1m[38;5;16m[48;5;227m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (tipha()) {
        if (bri > pii) {
            return true;
        }
    }
    if (isas()) {
        return true;
    }
    if (ipa == 3) {
        return true;
    }
    if (kriar() <= fewrer()) {
        return true;
    }
    if (or != 0) {
        if (oss) {
            return true;
        }
    }
    return false;

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    return tipha() && bri > pii || isas() || ipa == 3 || kriar() <= fewrer() || or != 0 && oss;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    if (!tipha()) {
        if (!isas()) {
            if (ipa != 3) {
                if (kriar() > fewrer()) {
                    if (or == 0) {
                        return false;
                    }
                    if (!oss) {
                        return false;
                    }
                }
            }
        }
    }
    if (bri <= pii) {
        if (!isas()) {
            if (ipa != 3) {
                if (kriar() > fewrer()) {
                    if (or == 0) {
                        return false;
                    }
                    if (!oss) {
                        return false;
                    }
                }
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;87m            [0m
[1m[38;5;16m[48;5;87m   PART 3   [0m
[1m[38;5;16m[48;5;87m            [0m

Simplify the following messy chain of conditionals:

    if (stao == true) {
        stil();
    }
    if (pem == true && stao != true) {
        adol();
    } else if (onos == true && stao != true && pem != true) {
        gokdal();
    }
    if (ul && stao != true && pem != true && onos != true) {
        cesh();
    } else if (mi == true && stao != true && pem != true && onos != true && !ul) {
        ictDajuss();
    } else if (stao != true && pem != true && onos != true && !ul && mi != true) {
        sinet();
    }

[1m[38;5;123m[48;5;23m              [0m
[1m[38;5;123m[48;5;23m   SOLUTION   [0m
[1m[38;5;123m[48;5;23m              [0m

    if (stao) {
        stil();
    } else if (pem) {
        adol();
    } else if (onos) {
        gokdal();
    } else if (ul) {
        cesh();
    } else if (mi) {
        ictDajuss();
    } else {
        sinet();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;206m            [0m
[1m[38;5;16m[48;5;206m   PART 1   [0m
[1m[38;5;16m[48;5;206m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!(!daci && (nolord() || meir() >= 3) && su) || psit == we || he) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        genta();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;212m[48;5;52m              [0m
[1m[38;5;212m[48;5;52m   SOLUTION   [0m
[1m[38;5;212m[48;5;52m              [0m

    if (!daci && (nolord() || meir() >= 3) && su && psit != we && !he) {
        genta();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;119m            [0m
[1m[38;5;16m[48;5;119m   PART 2   [0m
[1m[38;5;16m[48;5;119m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (enn) {
        if (!ocol) {
            if (!esi) {
                if (elid()) {
                    return true;
                }
            }
        }
    }
    if (ghir()) {
        if (!ocol) {
            if (!esi) {
                if (elid()) {
                    return true;
                }
            }
        }
    }
    if (cec != 0) {
        if (rar) {
            if (!ocol) {
                if (!esi) {
                    if (elid()) {
                        return true;
                    }
                }
            }
        }
    }
    return false;

[1m[38;5;156m[48;5;22m              [0m
[1m[38;5;156m[48;5;22m   SOLUTION   [0m
[1m[38;5;156m[48;5;22m              [0m

    return (enn || ghir() || cec != 0 && rar) && !ocol && !esi && elid();

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;156m[48;5;22m              [0m
[1m[38;5;156m[48;5;22m   SOLUTION   [0m
[1m[38;5;156m[48;5;22m              [0m

    if (!enn) {
        if (!ghir()) {
            if (cec == 0) {
                return false;
            }
            if (!rar) {
                return false;
            }
        }
    }
    if (ocol) {
        return false;
    }
    if (esi) {
        return false;
    }
    if (!elid()) {
        return false;
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;63m            [0m
[1m[38;5;16m[48;5;63m   PART 3   [0m
[1m[38;5;16m[48;5;63m            [0m

Simplify the following messy chain of conditionals:

    if (pri != 7 == true) {
        angco();
    } else if (ve == epis && pri != 7 != true) {
        sedre();
    }
    if (fi == true && pri != 7 != true && ve != epis) {
        dacDri();
    }
    if (chle == true && pri != 7 != true && ve != epis && fi != true) {
        chamo();
    } else if (usm && pri != 7 != true && ve != epis && fi != true && chle != true) {
        micSeviss();
    }
    if (pri != 7 != true && ve != epis && fi != true && chle != true && !usm) {
        hite();
    }

[1m[38;5;105m[48;5;17m              [0m
[1m[38;5;105m[48;5;17m   SOLUTION   [0m
[1m[38;5;105m[48;5;17m              [0m

    if (pri != 7) {
        angco();
    } else if (ve == epis) {
        sedre();
    } else if (fi) {
        dacDri();
    } else if (chle) {
        chamo();
    } else if (usm) {
        micSeviss();
    } else {
        hite();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;209m            [0m
[1m[38;5;16m[48;5;209m   PART 1   [0m
[1m[38;5;16m[48;5;209m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (!(!us || flei) && (crousa() && (scre() == 8 || lal == 0) || pepid())) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        sasssa();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;216m[48;5;52m              [0m
[1m[38;5;216m[48;5;52m   SOLUTION   [0m
[1m[38;5;216m[48;5;52m              [0m

    if (!us || flei || (!crousa() || scre() != 8 && lal != 0) && !pepid()) {
        sasssa();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;85m            [0m
[1m[38;5;16m[48;5;85m   PART 2   [0m
[1m[38;5;16m[48;5;85m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (ia) {
        if (pruec()) {
            if (esmBofo()) {
                if (seio) {
                    if (!ceid) {
                        return true;
                    }
                    if (!ece) {
                        return true;
                    }
                }
            }
        }
    }
    if (diho) {
        if (!ceid) {
            return true;
        }
        if (!ece) {
            return true;
        }
    }
    return false;

[1m[38;5;122m[48;5;22m              [0m
[1m[38;5;122m[48;5;22m   SOLUTION   [0m
[1m[38;5;122m[48;5;22m              [0m

    return (ia && pruec() && esmBofo() && seio || diho) && (!ceid || !ece);

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;122m[48;5;22m              [0m
[1m[38;5;122m[48;5;22m   SOLUTION   [0m
[1m[38;5;122m[48;5;22m              [0m

    if (!ia) {
        if (!diho) {
            return false;
        }
    }
    if (!pruec()) {
        if (!diho) {
            return false;
        }
    }
    if (!esmBofo()) {
        if (!diho) {
            return false;
        }
    }
    if (!seio) {
        if (!diho) {
            return false;
        }
    }
    if (ceid) {
        if (ece) {
            return false;
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;207m            [0m
[1m[38;5;16m[48;5;207m   PART 3   [0m
[1m[38;5;16m[48;5;207m            [0m

Simplify the following messy chain of conditionals:

    if (!spe) {
        eeax();
    } else if (kaal == true && spe) {
        tefil();
    } else if (ce >= 7 && spe && kaal != true) {
        nilest();
    }
    if (du >= pesi && spe && kaal != true && ce < 7) {
        harGans();
    }
    if (clus == true && spe && kaal != true && ce < 7 && du < pesi) {
        goheng();
    } else if (spe && kaal != true && ce < 7 && du < pesi && clus != true) {
        elpann();
    }

[1m[38;5;213m[48;5;53m              [0m
[1m[38;5;213m[48;5;53m   SOLUTION   [0m
[1m[38;5;213m[48;5;53m              [0m

    if (!spe) {
        eeax();
    } else if (kaal) {
        tefil();
    } else if (ce >= 7) {
        nilest();
    } else if (du >= pesi) {
        harGans();
    } else if (clus) {
        goheng();
    } else {
        elpann();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain can end with just an [4melse[24m, no final [4mif[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[1m[38;5;16m[48;5;227m            [0m
[1m[38;5;16m[48;5;227m   PART 1   [0m
[1m[38;5;16m[48;5;227m            [0m

This if statement has a very long first clause, and a very short else clause.
This makes it hard to read: the tiny else clause is so far from the condition,
itâ€™s hard to figure out what the [4melse[24m refers to!

    if (pi >= siurio() || (ang || oma) && pa > 9 && flik() && iilRoa()) {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    } else {
        clotol();
    }

Improve readability by refactoring this conditional so that its [1mtwo clauses are
swapped[22m: what is now the second clause (the [4melse[24m clause) comes first, and the
first clause comes second.

[1m[38;5;228m[48;5;58m              [0m
[1m[38;5;228m[48;5;58m   SOLUTION   [0m
[1m[38;5;228m[48;5;58m              [0m

    if (pi < siurio() && (!ang && !oma || pa <= 9 || !flik() || !iilRoa())) {
        clotol();
    } else {
        ...
        ...
        // Pretend there is lots of code here
        ...
        ...
    }

Things to double-check in your solution:

  - Do not just negate the condition by wrapping it all in a [1mnot[22m operator like
    this: [4m!(...)[24m Instead, make sure you negate the condition by changing each
    part of it.
  - You do not actually have to write out the words [4mPretend there is lots of
    code here[24m when you write out your solution! Just draw three dots; thatâ€™s
    enough.

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;75m            [0m
[1m[38;5;16m[48;5;75m   PART 2   [0m
[1m[38;5;16m[48;5;75m            [0m

Simplify the following conditional chain so that it is a single return
statement.

    if (!scas) {
        return true;
    }
    if (iloCobe() == 1) {
        return true;
    }
    if (me) {
        return true;
    }
    if (prip) {
        if (castea()) {
            if (oas) {
                return true;
            }
            if (helda()) {
                return true;
            }
        }
    }
    return false;

[1m[38;5;117m[48;5;17m              [0m
[1m[38;5;117m[48;5;17m   SOLUTION   [0m
[1m[38;5;117m[48;5;17m              [0m

    return !scas || iloCobe() == 1 || me || prip && castea() && (oas || helda());

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

Bonus challenge: rewrite the if/else chain above so that instead of consisting
of many [4mreturn true;[24m statements with one [4mreturn false;[24m at the end, it has many
[4mreturn false;[24m statements with one [4mreturn true;[24m at the end.

[1m[38;5;117m[48;5;17m              [0m
[1m[38;5;117m[48;5;17m   SOLUTION   [0m
[1m[38;5;117m[48;5;17m              [0m

    if (scas) {
        if (iloCobe() != 1) {
            if (!me) {
                if (!prip) {
                    return false;
                }
                if (!castea()) {
                    return false;
                }
                if (!oas) {
                    if (!helda()) {
                        return false;
                    }
                }
            }
        }
    }
    return true;

â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„â”„

[1m[38;5;16m[48;5;204m            [0m
[1m[38;5;16m[48;5;204m   PART 3   [0m
[1m[38;5;16m[48;5;204m            [0m

Simplify the following messy chain of conditionals:

    if (ol == true) {
        sqat();
    }
    if (hu == false && ol != true) {
        buaewn();
    }
    if (ent == true && ol != true && hu != false) {
        spacma();
    }
    if (ra == false && ol != true && hu != false && ent != true) {
        toiae();
    } else if (hus == false && ol != true && hu != false && ent != true && ra != false) {
        chif();
    } else if (ceo && ol != true && hu != false && ent != true && ra != false && hus != false) {
        breKesoth();
    }

[1m[38;5;211m[48;5;52m              [0m
[1m[38;5;211m[48;5;52m   SOLUTION   [0m
[1m[38;5;211m[48;5;52m              [0m

    if (ol) {
        sqat();
    } else if (!hu) {
        buaewn();
    } else if (ent) {
        spacma();
    } else if (!ra) {
        toiae();
    } else if (!hus) {
        chif();
    } else if (ceo) {
        breKesoth();
    }

Things to double-check in your solution:

  - Did you remove / simplify all the [4m== true[24m and [4m== false[24m checks?
  - This particular conditional chain must end with an [4melse if[24m, not just [4melse[24m.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[0m
***************** PLEASE NOTE ******************
***                                          ***
*** The puzzle above has a difficulty of 5.  ***
*** The difficulty level to get credit is 1. ***
***                                          ***
************************************************

To try the puzzle at the goal difficulty, generate a puzzle without the --difficulty option.

Want to practice more basics first? Try a simpler puzzle:

  bin/puzzle gen bool --difficulty 4

Want a bigger challenge? Try a harder difficulty level:

  bin/puzzle gen bool --difficulty 6

